# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  email: String!
  name: String!
  point: Int!
}

type PointTransaction {
  id: String!
  impUid: String!
  amount: Int!
  status: POINT_TRANSACTION_STATUS_ENUM!
  user: User!
  createdAt: DateTime!
}

enum POINT_TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type BoardCategory {
  id: String!
  name: String!
}

type BoardTag {
  id: String!
  name: String!
  boardTags: [Board!]!
}

type Board {
  number: Int!
  writer: String!
  title: String!
  contents: String!
  status: BOARD_PRIVATE!
  boardCategory: BoardCategory!
  user: User!
  boardTags: [BoardTag!]!
}

enum BOARD_PRIVATE {
  PUBLIC
  PRIVATE
}

type ProductCategory {
  id: String!
  name: String!
}

type ProductSaleslocation {
  id: String!
  address: String!
  addressDetail: String!
  lat: Float!
  lng: Float!
  meetingTime: DateTime!
}

type Product {
  id: String!
  name: String!
  description: String!
  price: Int!
  isSoldout: Boolean!
  productSaleslocation: ProductSaleslocation!
  productCategory: ProductCategory!
  user: User!
  productTags: [ProductTag!]!
}

type ProductTag {
  id: String!
  name: String!
  products: [Product!]!
}

type Query {
  fetchBoardCategories: [BoardCategory!]!
  fetchBoardCategory(name: String!): BoardCategory!
  fetchBoards: [Board!]!
  fetchBoard(number: Float!): Board!
  fetchMyBoards: [Board!]!
  fetchProducts: [Product!]!
  fetchProduct(productId: String!): Product!
  fetchProductCategories: [ProductCategory!]!
  fetchProductCategory(name: String!): ProductCategory!
  fetchUser: String!
  findOneByEmail(email: String!): String!
}

type Mutation {
  createBoardCategory(name: String!): BoardCategory!
  tokenlogin(email: String!, password: String!): String!
  login(email: String!, password: String!): String!
  restoreAccessToken: String!
  logout: String!
  createBoard(createBoardInput: CreateBoardInput!): Board!
  updateBoard(updateBoardInput: UpdateBoardInput!, number: Float!): Board!
  deleteBoard(number: Float!): Boolean!
  uploadFile(files: [Upload!]!): [String!]!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(productId: String!, updateProductinput: UpdateProductInput!): Product!
  deleteProduct(productId: String!): Boolean!
  createProductCategory(name: String!): ProductCategory!
  createUser(createUserInput: CreateUserInput!): User!
  deleteUser: String!
  updateUser(updateUserInput: CreateUserInput!): String!
  createPointTransaction(impUid: String!, amount: Float!): PointTransaction!
  cancelPointTransaction(impUid: String!): PointTransaction!
  styleChatBot(createCompletionDto: CreateCompletionDto!): String!
}

input CreateBoardInput {
  writer: String!
  title: String!
  contents: String!
  status: BOARD_PRIVATE!
  boardCategoryId: String!
  boardTags: [String!]!
}

input UpdateBoardInput {
  writer: String
  title: String
  contents: String
  status: BOARD_PRIVATE
  boardCategoryId: String
  boardTags: [String!]
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateProductInput {
  name: String!
  description: String!
  price: Int!
  productSaleslocation: ProductSaleslocationInput!
  productCategoryId: String!
  productTags: [String!]!
}

input ProductSaleslocationInput {
  address: String!
  addressDetail: String!
  lat: Float!
  lng: Float!
  meetingTime: DateTime!
}

input UpdateProductInput {
  name: String
  description: String
  price: Int
  productSaleslocation: ProductSaleslocationInput
  productCategoryId: String
  productTags: [String!]
}

input CreateUserInput {
  email: String!
  password: String!
  name: String!
}

input CreateCompletionDto {
  ask: String!
}